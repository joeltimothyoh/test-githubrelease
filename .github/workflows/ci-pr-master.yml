name: ci-master-pr

on:
  push:
    branches:
    - '**'
    tags:
    - '**'
  pull_request:
    branches:
    - master

jobs:
  generate-and-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Powershell version
      run: |
        pwsh -NoLogo -NonInteractive -NoProfile -Command '$PSVersionTable'
    - name: Generate release notes
      run: |
        # Clone project
        git clone https://github.com/theohbrothers/PSRepositoryReleaseManager.git --recurse-submodules PSRepositoryReleaseManager

        # Process applicable environment variables
        export PROJECT_DIRECTORY="$(git rev-parse --show-toplevel)"
        export RELEASE_TAG_REF=$( echo "$GITHUB_REF" | sed -rn 's/^refs\/tags\/(.*)/\1/p' )

        echo "GITHUB_REF: $GITHUB_REF"
        echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
        echo "RELEASE_TAG_REF: $RELEASE_TAG_REF"

        # Generate (Generates release notes)
        pwsh -c '$VerbosePreference = "Continue"; ./PSRepositoryReleaseManager/src/scripts/ci/Invoke-Generate.ps1'
        cat PSRepositoryReleaseManager/.release-notes.md
    - name: upload-artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-notes
        path: PSRepositoryReleaseManager/.release-notes.md
    - name: Create release
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        # Process applicable environment variables
        export PROJECT_DIRECTORY="$(git rev-parse --show-toplevel)"
        export RELEASE_TAG_REF="$GITHUB_REF_NAME"
        export RELEASE_NAMESPACE="$GITHUB_REPOSITORY_OWNER"
        export RELEASE_REPOSITORY=$(basename "$(git rev-parse --show-toplevel)")

        echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
        echo "RELEASE_TAG_REF: $RELEASE_TAG_REF"

        # Release (Creates GitHub release)
        pwsh -c 'gci env:*'
        pwsh -c '$VerbosePreference = "Continue"; ./PSRepositoryReleaseManager/src/scripts/ci/Invoke-Release.ps1'
      env:
        GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
